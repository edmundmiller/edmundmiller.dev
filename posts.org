#+title: Posts to make

** TODO Emacs and Julia
https://old.reddit.com/r/Julia/comments/v4npic/setting_up_emacs_for_julia_in_windows_seeking/
** TODO Functional programming principals to apply to bioinformatics
** TODO Functional programming and nextflow
** TODO Org mode site rewrite
** TODO Comparing the different Plots.jl backends
** TODO Julia testing
:LOGBOOK:
CLOCK: [2022-06-16 Thu 21:30]--[2022-06-16 Thu 22:47] =>  1:17
:END:
https://www.juliapackages.com/p/pkgtemplates
https://www.youtube.com/watch?v=n-UP_Ul-JjE
https://juliatesting.github.io/ReTest.jl/stable/
https://discourse.julialang.org/t/best-practices-for-julia-unit-testing/30858
https://docs.julialang.org/en/v1/stdlib/Test/

https://www.youtube.com/watch?v=IuwxE3m0_QQ
** TODO Rust and Julia comparison

- Feris Juggling the Julia logo
- Rust is the most loved language in stackoverflow *again*
- Julia is climbing the ranks
*** Points
- Built-in package management
- Central package store
- Types
  - The best part is they're there when you want them(when you're developing packages)
- Baked in testing suite is adequate(ie don't need pytest/jest)
- Community
- Written in the last decade
- Easy version management
  https://github.com/JuliaLang/juliaup
- Does it's main feature and does it well
  - Rust is focused on memory safety
  - Julia is focused on being fast
    - Link to why we wrote Julia
** DONE Julia for bioinformatics
CLOSED: [2022-06-01 Wed 14:28]
:LOGBOOK:
CLOCK: [2022-06-01 Wed 13:30]--[2022-06-01 Wed 14:29] =>  0:59
CLOCK: [2022-06-01 Wed 12:00]--[2022-06-01 Wed 12:30] =>  0:30
CLOCK: [2022-03-31 Thu 12:22]--[2022-03-31 Thu 13:45] =>  1:23
CLOCK: [2022-03-31 Thu 11:58]--[2022-03-31 Thu 12:04] =>  0:06
:END:
