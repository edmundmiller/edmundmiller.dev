#+TITLE: CTRL to Caps Lock
#+EXCERPT: With a bonus ESC on tap.
#+COVER_IMAGE: /assets/blog/dynamic-routing/cover.jpg
#+DATE: 2019-01-13T22:42Z
#+AUTHOR: Edmund Miller
#+AUTHOR_PICTURE: /assets/blog/authors/jj.jpeg
#+OG_IMAGE: /assets/blog/dynamic-routing/cover.jpg

I grew up in a household where =CTRL= has been mapped to =Caps Lock= on every
computer. It was just something I had never questioned until recently. As a
heavy =CTRL= user between Emacs and terminal apps now, I understand.I thought
this would be fitting for a first blog post as kind of an origin story.

So I got my first mechanical keyboard about a year and a half ago, and since
it's powered by [[https://docs.qmk.fm/#/][qmk]], I decided to replace where caps lock might have been on my
planck, to =ESC= to make Vim and evil a little easier instead of using =jk= or
other ways to switch back to normal mode.

Fast-forward to recently and my mechanical keyboard family has grown with the
addition of an ergodox-ez. The default bindings had a lot of keys that with a
quick tap was a letter, and a hold became a modifier key. So I thought it might
be useful to do this with =ESC= and =CTRL=. This is the line to make it happen
with [[https://docs.qmk.fm/#/][qmk]].

#+begin_src c
CTL_T(KC_ESC)
#+end_src

But it wasn't just enough to have it on my keyboards. I needed this magic
everywhere.

After mentioning what I had done on the Doom Emacs discord one of them found a
[[https://www.dannyguo.com/blog/remap-caps-lock-to-escape-and-control/][guide by Danny Guo]] to set this up on most systems.

[[https://www.dannyguo.com/blog/remap-caps-lock-to-escape-and-control/#xcape][Instructions for Ubuntu]] however, under =gnome tweaks= under keyboard, additional
layout options, Ctrl position, it was =Caps Lock as Ctrl=.

I now have ESC/CTRL set to caps lock on keyboards not powered by qmk, such as my
laptops built in keyboard.
