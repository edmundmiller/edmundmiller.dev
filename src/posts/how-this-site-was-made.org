#+title: How This Site Was Made

* TODO Org publish action

[[https://notes.ethancpost.com/how_this_website_is_made.html][How This Website Is Made]]

Miller columns

Him publishing to s3 gets me thinking... What if I just publish to r2(Since
that's my shtick of the day), and then I can just move my personal domain over,
point it at the bucket, and boom, website.

* TODO How do I use org-publish?
* TODO Cloudflare pages
* TODO Openring

https://nixing.mx/posts/integrating-openring-into-a-blog.html
https://www.thedroneely.com/posts/webrings-with-openring/
https://drewdevault.com/make-a-blog

** Might as well setup Nix in CI...

Down the rabbit hole we go!

After reading a couple of blog posts[fn:1], I was looking for a project to use
nix in CI, because I've neglected the CI in my dotfiles...

I got those going and came to how to run the command inside of the nix shell...
then I thought, what if I overengineer the build system just a bit? It's not
really overengineering is it? It's quite simple, it's just applying years of
pain and suffering is all.

I borrowed a cool scripting ideas from [[https://github.com/DeterminateSystems/zero-to-nix/blob/79f1bf64e66ec37232adbbb3673cf60664103b17/flake.nix#L60][Determinates Systems' zero-to-nix's
flake.nix]] to make a poor-man's ~package.json~ of sorts and add a script for
openring.

Now I can run it locally or in CI with ease!

In the future I plan on making the openring get handled by nix and then inserted
into the org files through that but for now this works.

** TODO Trying to get it to work in babel...
** TODO devenv to the rescue!
** TODO JK it was org babel all along
http://xahlee.info/emacs/emacs/emacs_org_babel_literate_programing.html
https://orgmode.org/worg/org-contrib/babel/languages/ob-doc-shell.html

* Footnotes

[fn:1] [[https://determinate.systems/posts/determinate-nix-installer][Introducing the Determinate Nix Installer]], [[https://determinate.systems/posts/magic-nix-cache][Introducing the Magic Nix Cache]], [[https://determinate.systems/posts/flake-checker][Introducing the Nix Flake Checker]]
