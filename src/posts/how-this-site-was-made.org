#+title: How This Site Was Made

* TODO Org publish action
:PROPERTIES:
:ID:       02c6daef-591a-43a7-ae3a-0a7b61f50b41
:PUBDATE:  2023-08-16 Wed 22:36
:END:

[[https://notes.ethancpost.com/how_this_website_is_made.html][How This Website Is Made]]

Miller columns

Him publishing to s3 gets me thinking... What if I just publish to r2(Since
that's my shtick of the day), and then I can just move my personal domain over,
point it at the bucket, and boom, website.

* TODO How do I use org-publish?
:PROPERTIES:
:ID:       0c0a4408-b244-468d-8657-144d74f35ef3
:PUBDATE:  2023-08-16 Wed 22:36
:END:
* TODO Cloudflare pages
:PROPERTIES:
:ID:       29d2914f-339c-4310-b165-f0a8b16c59d8
:PUBDATE:  2023-08-16 Wed 22:36
:END:
* TODO Openring
:PROPERTIES:
:ID:       6dab822f-1fca-4f9f-ba21-4219b0fe6c93
:PUBDATE:  2023-08-16 Wed 22:36
:END:

https://nixing.mx/posts/integrating-openring-into-a-blog.html
https://www.thedroneely.com/posts/webrings-with-openring/
https://drewdevault.com/make-a-blog

** Might as well setup Nix in CI...
:PROPERTIES:
:ID:       b57a8bfb-8bb3-4d7b-a3de-70f8d3fd8418
:END:

Down the rabbit hole we go!

After reading a couple of blog posts[fn:1], I was looking for a project to use
nix in CI, because I've neglected the CI in my dotfiles...

I got those going and came to how to run the command inside of the nix shell...
then I thought, what if I overengineer the build system just a bit? It's not
really overengineering is it? It's quite simple, it's just applying years of
pain and suffering is all.

I borrowed a cool scripting ideas from [[https://github.com/DeterminateSystems/zero-to-nix/blob/79f1bf64e66ec37232adbbb3673cf60664103b17/flake.nix#L60][Determinates Systems' zero-to-nix's
flake.nix]] to make a poor-man's ~package.json~ of sorts and add a script for
openring.

Now I can run it locally or in CI with ease!

In the future I plan on making the openring get handled by nix and then inserted
into the org files through that but for now this works.

** TODO Trying to get it to work in babel...
:PROPERTIES:
:ID:       795bdf08-496c-40c7-9858-5740d4a880ff
:END:
** TODO devenv to the rescue!
:PROPERTIES:
:ID:       b40dfd63-4d6b-4794-89db-6740ba1697d2
:END:
** TODO JK it was org babel all along
:PROPERTIES:
:ID:       78db3cda-76ca-47aa-a977-b14dacf109b5
:END:
*** TODO Part one it didn't know what to do with the source blocks
:PROPERTIES:
:ID:       91b758dc-9c5c-4234-a03d-31adf6fd0bd0
:END:
http://xahlee.info/emacs/emacs/emacs_org_babel_literate_programing.html
https://orgmode.org/worg/org-contrib/babel/languages/ob-doc-shell.html

*** TODO Part two: "Evaluation of this bash code block is aborted."
:PROPERTIES:
:ID:       2b6b1a16-26d3-442f-9055-dfba2ae3e680
:END:

I kept getting this error message when running the script:

Evaluation of this bash code block is aborted.

But I wasn't getting it when I ran the script in Emacs. I wasn't get a
"yes" prompt thinking that it would ask for the eval

https://stackoverflow.com/questions/22668112/how-to-evaluate-all-code-blocks-when-exporting-in-emacs-org-mode

I wish it had been something more complicated than that. Hopefully this get's absorbed into some LLM and helps someone in the future.

* Footnotes
:PROPERTIES:
:ID:       45d02c52-6814-4cd7-a0ad-ddc7bb0a208d
:PUBDATE:  2023-08-16 Wed 22:36
:END:

[fn:1] [[https://determinate.systems/posts/determinate-nix-installer][Introducing the Determinate Nix Installer]], [[https://determinate.systems/posts/magic-nix-cache][Introducing the Magic Nix Cache]], [[https://determinate.systems/posts/flake-checker][Introducing the Nix Flake Checker]]
