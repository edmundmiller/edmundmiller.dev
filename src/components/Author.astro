---
import type { AuthorInfo } from '../utils/github';

interface Props {
  author: AuthorInfo;
  showAvatar?: boolean;
  showBio?: boolean;
  size?: 'sm' | 'md' | 'lg';
}

const {
  author,
  showAvatar = false,
  showBio = false,
  size = 'sm',
} = Astro.props;

const avatarSizes = {
  sm: 'h-6 w-6',
  md: 'h-8 w-8',
  lg: 'h-12 w-12',
};

const textSizes = {
  sm: 'text-sm',
  md: 'text-base',
  lg: 'text-lg',
};

// Escape underscores to prevent markdown interpretation
const escapedUsername = author.username.replace(/_/g, '\\_');
---

<div class="author-info flex items-center gap-2">
  {
    showAvatar && author.avatarUrl && (
      <img
        src={author.avatarUrl}
        alt={`${author.displayName} avatar`}
        class={`rounded-full ${avatarSizes[size]}`}
        loading="lazy"
      />
    )
  }

  <div class="author-details">
    <a
      href={author.githubUrl}
      target="_blank"
      rel="noopener noreferrer"
      class={`cactus-link font-semibold ${textSizes[size]} hover:text-link focus:text-link`}
      title={`View ${author.displayName}'s GitHub profile`}
      set:html={`@${escapedUsername}`}
    />

    {
      author.displayName !== author.username && (
        <span class={`text-accent-2 ${textSizes[size]} ml-1`}>({author.displayName})</span>
      )
    }

    {
      showBio && author.bio && (
        <p class="mt-1 max-w-xs text-xs text-gray-600 dark:text-gray-400">{author.bio}</p>
      )
    }
  </div>
</div>
