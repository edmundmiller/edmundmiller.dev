---
import type { CollectionEntry } from "astro:content";

import { Image } from "astro:assets";

import FormattedDate from "../FormattedDate.astro";

interface Props {
  content: CollectionEntry<"post">;
}

const {
  content: { data, render },
} = Astro.props;

const { remarkPluginFrontmatter } = await render();

const dateTimeOptions: Intl.DateTimeFormatOptions = {
  month: "long",
};

// Handle authors - normalize to array for consistent display
const authors = data.author ? (Array.isArray(data.author) ? data.author : [data.author]) : [];
---

{
  data.coverImage && (
    <div class="aspect-h-9 aspect-w-16 mb-6">
      <Image
        alt={data.coverImage.alt}
        class="object-cover"
        fetchpriority="high"
        loading="eager"
        src={data.coverImage.src}
      />
    </div>
  )
}
{data.draft ? <span class="text-base text-red-500">(Draft)</span> : null}
<h1 class="p-name title mb-3 sm:mb-1">
  {data.title}
</h1>
<div class="flex flex-wrap items-center gap-x-3 gap-y-2">
  <p class="font-semibold">
    <FormattedDate date={data.publishDate} dateTimeOptions={dateTimeOptions} class="dt-published" />
    /{" "}
    {remarkPluginFrontmatter.minutesRead}
  </p>
  {
    data.updatedDate && (
      <span class="rounded-lg bg-quote/10 p-1 text-quote">
        Last Updated:
        <FormattedDate class="ms-1" date={data.updatedDate} dateTimeOptions={dateTimeOptions} />
      </span>
    )
  }
</div>

{/* Authors section */}
{
  authors.length > 0 && (
    <div class="mt-3 flex flex-wrap items-center gap-x-2">
      <svg
        aria-hidden="true"
        class="h-5 w-5 text-accent"
        fill="none"
        focusable="false"
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="1.5"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2" />
        <circle cx="12" cy="7" r="4" />
      </svg>
      <span class="text-sm font-medium">
        {authors.length === 1 ? "Author:" : "Authors:"}
        {authors.map((author, i) => (
          <>
            <span class="font-semibold text-accent-2">{author}</span>
            {i < authors.length - 1 &&
              (authors.length === 2 ? " and " : i === authors.length - 2 ? ", and " : ", ")}
          </>
        ))}
      </span>
    </div>
  )
}

{/* Canonical URL section */}
{
  data.canonical && (
    <div class="mt-3 flex flex-wrap items-center gap-x-2">
      <svg
        aria-hidden="true"
        class="h-5 w-5 text-accent"
        fill="none"
        focusable="false"
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="1.5"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" />
        <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" />
      </svg>
      <span class="text-sm">
        <span class="font-medium">Originally published at:</span>
        <a
          href={data.canonical}
          class="cactus-link ml-1 font-semibold"
          target="_blank"
          rel="noopener noreferrer"
        >
          {new URL(data.canonical).hostname}
        </a>
      </span>
    </div>
  )
}

{
  !!data.tags?.length && (
    <div class="mt-3">
      <svg
        aria-hidden="true"
        class="me-1 inline-block h-6 w-6"
        fill="none"
        focusable="false"
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="1.5"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path d="M0 0h24v24H0z" fill="none" stroke="none" />
        <path d="M7.859 6h-2.834a2.025 2.025 0 0 0 -2.025 2.025v2.834c0 .537 .213 1.052 .593 1.432l6.116 6.116a2.025 2.025 0 0 0 2.864 0l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-6.117 -6.116a2.025 2.025 0 0 0 -1.431 -.593z" />
        <path d="M17.573 18.407l2.834 -2.834a2.025 2.025 0 0 0 0 -2.864l-7.117 -7.116" />
        <path d="M6 9h-.01" />
      </svg>
      {data.tags.map((tag, i) => (
        <>
          <a
            aria-label={`View more blogs with the tag ${tag}`}
            class="p-category cactus-link inline-block before:content-['#']"
            data-pagefind-filter="tag"
            href={`/tags/${tag}/`}
          >
            {tag}
          </a>
          {i < data.tags.length - 1 && ", "}
        </>
      ))}
    </div>
  )
}
